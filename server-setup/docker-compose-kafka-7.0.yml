version: '3.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000    
    networks:
      my-network:
        ipv4_address: 172.18.0.100

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      my-network:
        ipv4_address: 172.18.0.101

  # kafka-rest:
  #   image: confluentinc/cp-kafka-rest:7.0.0
  #   hostname: kafka-rest
  #   container_name: kafka-rest
  #   depends_on:
  #     - kafka
  #   ports:
  #     - 8082:8082
  #   environment:
  #     KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_REST_LISTENERS: "http://kafka-rest:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     KAFKA_REST_HOST_NAME: kafka-rest
  #     KAFKA_REST_DEBUG: "true"
  #   networks:
  #     my-network:
  #       ipv4_address: 172.18.0.131

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.0.0
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
  #   networks:
  #     my-network:
  #       ipv4_address: 172.18.0.121

  connect:
    image: confluentinc/cp-kafka-connect-base:7.0.0
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8083:8083
      # - 8888:8888
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      # KAFKA_DEBUG: true
      # JAVA_DEBUG_PORT: "*:8888"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/java/confluentinc-kafka-connect-jdbc-10.3.3'
    volumes:
      - /home/jjd/workspace/connector/confluentinc-kafka-connect-jdbc-10.3.3/lib:/usr/share/java/confluentinc-kafka-connect-jdbc-10.3.3
      # /usr/share/java/kafka 아래에 위치해야 함
      - /home/jjd/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.7.1/mariadb-java-client-2.7.1.jar:/usr/share/java/kafka/mariadb-java-client-2.7.1.jar
    networks:
      my-network:
        ipv4_address: 172.18.0.111
        
networks:
  my-network: 
    external: 
      name: ecommerce-network          